# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  
  schedule:
    - cron: '25 05 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Heavily based on https://github.com/actions/setup-python
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install pip & dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Scrape & parse pages
      env:
        pages: ${{ secrets.pages }}
      run: python app/step-1.py headless
    
    - name: Generate ICS
      run: python app/to_ics.py
    
    - name: Cache for deployment
      uses: actions/cache@v3
      with:
        path: ./public
        key: output
      
  
  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Load cache
        uses: actions/cache@v3
        with:
          path: ./public
          key: output
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload public directory
          path: './public/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
